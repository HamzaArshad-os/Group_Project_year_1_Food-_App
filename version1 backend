const rc = 1
const apikey= '07e0e692a4c044b2963896f8cbc4d8df'

 function getRandomRecipe(){ //returns single random recipe
    let urltobe = `https://api.spoonacular.com/recipes/random?apiKey=${apikey}`
    console.log(urltobe)
    fetch(urltobe)
        .then(res => res.json())
        .then(data => console.log(data))


 }

 function getRecipebyCuisine(){//returns  recipes dependent on requested cuisine can set up to return multiple by channgin var rc 
    //let type = mealtype
    let cuisinetosearch = document.getElementById("input1").value;
    let urltobe = `https://api.spoonacular.com/recipes/complexSearch?apiKey=${apikey}&number=${rc}&cuisine=${cuisinetosearch}` 
    console.log(urltobe)
    fetch(urltobe)
        .then(res => res.json())
        .then(data => console.log(data))

 }

/*
 function  getRecipebyCuisine(cusine); document.getElementById("btn").addEventListener("click"){//returns  recipes dependent on requested cuisine can set up to return multiple by channgin var rc 
    cusine= document.getElementById("input1")
      let urltobe = `https://api.spoonacular.com/recipes/complexSearch?apiKey=${apikey}&number=${rc}&cuisine=${cuisinetosearch}&type=${type}` 
      console.log(urltobe)
      fetch(urltobe)
          .then(res => res.json())
          .then(data => console.log(data))
  
   }
   */


 function getRecipeByCarbAndProteinRequiremnt(carbcount,proteincount){ //self explanatory
    let type = mealtype
     let maxcarbcount  = carbcount
     let maxproteincount = proteincount
     let urltobe = `https://api.spoonacular.com/recipes/findByNutrients?apiKey=${apikey}&number=${rc}&maxCarbs=${maxcarbcount}&maxProtein=${maxproteincount}& type=${type}` 
    console.log(urltobe)
    fetch(urltobe)
        .then(res => res.json())
        .then(data => console.log(data))


 }


 function getRecipeByCalorieRequiremnt(calories,mealtype){ //self explanatory
    let caloriecount  = calories
    let type = mealtype
    let urltobe = `https://api.spoonacular.com/recipes/findByNutrients?apiKey=${apikey}&number=${rc}&maxCalories=${caloriecount}&type=${type}` 
    console.log(urltobe)
    fetch(urltobe)
        .then(res => res.json())
        .then(data => console.log(data))
}



function searchRecipebyIngredients(ingredient,mealtype){ //allows to search for recipes with ingredients already got
    let type = mealtype
    let gotingredients = String(ingredient).split(',')
    
    let stringedingredients = '';
    console.log(gotingredients.length)
    for (let i = 0; i < gotingredients.length; i++) {
        console.log("processing")
        stringedingredients +=gotingredients[i] + ','
      }
      var finalingredientstring = stringedingredients.substring(0, stringedingredients.length - 1);
    console.log(finalingredientstring)

    let urltobe = `https://api.spoonacular.com/recipes/findByIngredients?apiKey=${apikey}&number=${rc}&ignorePantry&ingredients=${finalingredientstring}&type=${type}` 
    console.log(urltobe)
    fetch(urltobe)
        .then(res => res.json())
        .then(data => console.log(data))

    

}







 const btn = document.getElementById("btn");
 btn.addEventListener("click",function(e){
     e.preventDefault();
    getRecipebyCuisine()

 });





//getRandomRecipe()
 //getRecipeByCarbAndProteinRequiremnt(50,100)
 //getRecipeByCalorieRequiremnt(50,'main course') //upto here worked before  adding type=${type} , is untested will be reason for errors
 //searchRecipebyIngredients('rice') //will ignore mealtype bug or feature lol?
// getRecipebyCuisine(document.getElementById("input1"))



 function testfunction(){
    const fruits = ["Banana", "Orange", "Apple", "Mango"];
    let fLen = fruits.length;
    let text = "<ul>";
    for (let i = 0; i < fLen; i++) {
        text += "<li>" + fruits[i] + "</li>";
        console.log('peepee')
    }
}




 function getRandomRecipeWithTags(tagstring){
    //const string= string(tagstring).split(',')
   
   
    fetch('https://api.spoonacular.com/recipes/random?apiKey=07e0e692a4c044b2963896f8cbc4d8df?number=1&tags=')
        .then(res => res.json())
        .then(data => console.log(data))


 }
 
